{"ast":null,"code":"import axios from \"axios\";\nconst TOKEN_TYPE = localStorage.getItem(\"tokenType\");\nlet ACCESS_TOKEN = localStorage.getItem(\"accessToken\");\nlet REFRESH_TOKEN = localStorage.getItem(\"refreshToken\");\nexport const UserApi = axios.create({\n  //\n  baseURL: `http://localhost:8088`,\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': `${TOKEN_TYPE} ${ACCESS_TOKEN}`,\n    // 토큰타입과 accesstoken과 띄어쓰기가 꼭있어야한다\n    'REFRESH_TOKEN': REFRESH_TOKEN\n  }\n});\nconst refreshAccessToken = async () => {\n  //\n  const response = await UserApi.get(\"/api/auth/refresh\");\n  ACCESS_TOKEN = response.data;\n  localStorage.setItem = ('accessToken', ACCESS_TOKEN);\n  UserApi.defaults.headers['Authorization'] = `${TOKEN_TYPE} ${ACCESS_TOKEN}`;\n};\n\n// return - axios.interceptor - then\nUserApi.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  const originalRequest = error.config;\n  if (error.response.status === 403 && !originalRequest._retry) {\n    await refreshAccessToken();\n    return UserApi(originalRequest);\n  }\n  return Promise.reject(error);\n});\nexport const fetchUser = async () => {\n  const response = await UserApi.get(`/api/v1/user`);\n  return response.data;\n};\nexport const updateUser = async data => {\n  const response = await UserApi.put(`/api/v1/user`, data);\n  return response.data;\n};\nexport const deleteUser = async () => {\n  await UserApi.delete(`/api/v1/user`);\n};","map":{"version":3,"names":["axios","TOKEN_TYPE","localStorage","getItem","ACCESS_TOKEN","REFRESH_TOKEN","UserApi","create","baseURL","headers","refreshAccessToken","response","get","data","setItem","defaults","interceptors","use","error","originalRequest","config","status","_retry","Promise","reject","fetchUser","updateUser","put","deleteUser","delete"],"sources":["C:/SIAT/07.react/app-part2/src/api/user/UserAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst TOKEN_TYPE = localStorage.getItem(\"tokenType\");\r\nlet ACCESS_TOKEN = localStorage.getItem(\"accessToken\");\r\nlet REFRESH_TOKEN = localStorage.getItem(\"refreshToken\");\r\n\r\nexport const UserApi = axios.create({\r\n    //\r\n    baseURL: `http://localhost:8088`,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `${TOKEN_TYPE} ${ACCESS_TOKEN}`,    // 토큰타입과 accesstoken과 띄어쓰기가 꼭있어야한다\r\n        'REFRESH_TOKEN': REFRESH_TOKEN\r\n    }\r\n});\r\n\r\nconst refreshAccessToken = async () => {\r\n    //\r\n    const response = await UserApi.get(\"/api/auth/refresh\");\r\n    ACCESS_TOKEN = response.data;\r\n    localStorage.setItem = ('accessToken', ACCESS_TOKEN);\r\n    UserApi.defaults.headers['Authorization'] = `${TOKEN_TYPE} ${ACCESS_TOKEN}`;\r\n}\r\n\r\n// return - axios.interceptor - then\r\nUserApi.interceptors.response.use((response) => {\r\n    return response;\r\n}, async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    if (error.response.status === 403 && !originalRequest._retry) {\r\n        await refreshAccessToken();\r\n        return UserApi(originalRequest);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nexport const fetchUser = async () => {\r\n    const response = await UserApi.get(`/api/v1/user`);\r\n    return response.data;\r\n}\r\n\r\nexport const updateUser = async (data) => {\r\n    const response = await UserApi.put(`/api/v1/user`, data);\r\n    return response.data;\r\n}\r\n\r\nexport const deleteUser = async () => {\r\n    await UserApi.delete(`/api/v1/user`);\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;AACpD,IAAIC,YAAY,GAAGF,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;AACtD,IAAIE,aAAa,GAAGH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAExD,OAAO,MAAMG,OAAO,GAAGN,KAAK,CAACO,MAAM,CAAC;EAChC;EACAC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAE,GAAGR,UAAU,IAAIG,YAAY,EAAE;IAAK;IACrD,eAAe,EAAEC;EACrB;AACJ,CAAC,CAAC;AAEF,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EACnC;EACA,MAAMC,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAG,CAAC,mBAAmB,CAAC;EACvDR,YAAY,GAAGO,QAAQ,CAACE,IAAI;EAC5BX,YAAY,CAACY,OAAO,IAAI,aAAa,EAAEV,YAAY,CAAC;EACpDE,OAAO,CAACS,QAAQ,CAACN,OAAO,CAAC,eAAe,CAAC,GAAG,GAAGR,UAAU,IAAIG,YAAY,EAAE;AAC/E,CAAC;;AAED;AACAE,OAAO,CAACU,YAAY,CAACL,QAAQ,CAACM,GAAG,CAAEN,QAAQ,IAAK;EAC5C,OAAOA,QAAQ;AACnB,CAAC,EAAE,MAAOO,KAAK,IAAK;EAChB,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM;EAEpC,IAAIF,KAAK,CAACP,QAAQ,CAACU,MAAM,KAAK,GAAG,IAAI,CAACF,eAAe,CAACG,MAAM,EAAE;IAC1D,MAAMZ,kBAAkB,CAAC,CAAC;IAC1B,OAAOJ,OAAO,CAACa,eAAe,CAAC;EACnC;EAEA,OAAOI,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAChC,CAAC,CAAC;AAEF,OAAO,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;EACjC,MAAMd,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAG,CAAC,cAAc,CAAC;EAClD,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMa,UAAU,GAAG,MAAOb,IAAI,IAAK;EACtC,MAAMF,QAAQ,GAAG,MAAML,OAAO,CAACqB,GAAG,CAAC,cAAc,EAAEd,IAAI,CAAC;EACxD,OAAOF,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMtB,OAAO,CAACuB,MAAM,CAAC,cAAc,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}